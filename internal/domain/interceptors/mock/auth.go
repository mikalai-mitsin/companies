// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/018bf/companies/internal/domain/interceptors (interfaces: AuthInterceptor)

// Package mock_interceptors is a generated GoMock package.
package mock_interceptors

import (
	context "context"
	reflect "reflect"

	models "github.com/018bf/companies/internal/domain/models"
	gomock "github.com/golang/mock/gomock"
)

// MockAuthInterceptor is a mock of AuthInterceptor interface.
type MockAuthInterceptor struct {
	ctrl     *gomock.Controller
	recorder *MockAuthInterceptorMockRecorder
}

// MockAuthInterceptorMockRecorder is the mock recorder for MockAuthInterceptor.
type MockAuthInterceptorMockRecorder struct {
	mock *MockAuthInterceptor
}

// NewMockAuthInterceptor creates a new mock instance.
func NewMockAuthInterceptor(ctrl *gomock.Controller) *MockAuthInterceptor {
	mock := &MockAuthInterceptor{ctrl: ctrl}
	mock.recorder = &MockAuthInterceptorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthInterceptor) EXPECT() *MockAuthInterceptorMockRecorder {
	return m.recorder
}

// ValidateToken mocks base method.
func (m *MockAuthInterceptor) ValidateToken(arg0 context.Context, arg1 *models.Token) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockAuthInterceptorMockRecorder) ValidateToken(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockAuthInterceptor)(nil).ValidateToken), arg0, arg1)
}
