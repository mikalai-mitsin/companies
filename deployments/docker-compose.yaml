# NOT FOR PRODUCTION!
version: '3'

services:
  companies:
    depends_on:
      companies-migrate:
        condition: service_completed_successfully
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy
    build:
      context: ../
      dockerfile: build/Dockerfile
    command: rest
    environment:
      COMPANIES_CONFIG_PATH: /app/config/config.toml
    volumes:
      - ./config.toml:/app/config/config.toml
    ports:
      - "8000:8000"
  companies-migrate:
    depends_on:
      postgres:
        condition: service_started
      kafka:
        condition: service_healthy
    build:
      context: ../
      dockerfile: build/Dockerfile
    command: migrate
    environment:
      COMPANIES_CONFIG_PATH: /app/config/config.toml
    volumes:
      - ./config.toml:/app/config/config.toml
  postgres:
    image: postgres:latest
    restart: always
    env_file:
      - postgres.env
    volumes:
      - postgres:/var/lib/postgresql/data
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    healthcheck:
      test: [ "CMD", "kafka-topics.sh", "--list", "--zookeeper", "zookeeper:2181" ]
      interval: 5s
      timeout: 10s
      retries: 5
    depends_on:
      - zookeeper
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    env_file:
      - kafka.env

volumes:
  postgres: { }