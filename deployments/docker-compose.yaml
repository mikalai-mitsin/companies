version: '2'

services:
  companies:
    depends_on:
      - postgres
      - kafka
    build:
      context: ../
      dockerfile: build/Dockerfile
    command: rest
    environment:
      COMPANIES_CONFIG_PATH: /app/config/config.toml
    volumes:
      - ./config.toml:/app/config/config.toml
    ports:
      - "8000:8000"
  companies-migrate:
    depends_on:
      - postgres
    build:
      context: ../
      dockerfile: build/Dockerfile
    command: migrate
    environment:
      COMPANIES_CONFIG_PATH: /app/config/config.toml
    volumes:
      - ./config.toml:/app/config/config.toml
  postgres:
    image: postgres:latest
    restart: always
    env_file:
      - postgres.env
    volumes:
      - postgres:/var/lib/postgresql/data
  kouncil:
    image: consdata/kouncil:latest
    environment:
      'bootstrapServers': "kafka:9092"
      'kouncil.auth.active-provider': "inmemory"
    ports:
      - "8080:8080"
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://127.0.0.1:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "companies:1:1"
volumes:
  postgres: { }